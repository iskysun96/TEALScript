#pragma version 9

txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

abi_route_nestedTuple:
	byte 0x
	callsub nestedTuple
	int 1
	return

nestedTuple:
	proto 1 0

	// tests/contracts/abi.algo.ts:661
	// a: [uint<16>, [uint<8>, string], [uint<16>, string]] = [11, [22, 'foo'], [33, 'bar']]
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0006 // initial head offset
	byte 0x000b
	callsub process_static_tuple_element
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0003 // initial head offset
	byte 0x16
	callsub process_static_tuple_element
	byte "foo"
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	callsub process_dynamic_tuple_element
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0004 // initial head offset
	byte 0x0021
	callsub process_static_tuple_element
	byte "bar"
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	frame_bury -1 // a: [uint16,[uint8,string],[uint16,string]]

	// tests/contracts/abi.algo.ts:663
	// return a;
	frame_dig -1 // a: [uint16,[uint8,string],[uint16,string]]
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_defaultTEALScriptCreate:
	int 1
	return

create_NoOp:
	txn NumAppArgs
	switch abi_route_defaultTEALScriptCreate
	err

call_NoOp:
	method "nestedTuple()(uint16,(uint8,string),(uint16,string))"
	txna ApplicationArgs 0
	match abi_route_nestedTuple
	err

process_static_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -1 // element
	concat
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub

process_dynamic_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -2 // head offset
	concat
	frame_bury -4 // tuple head
	frame_dig -1 // element
	dup
	len
	frame_dig -2 // head offset
	btoi
	+
	itob
	extract 6 2
	frame_bury -2 // head offset
	frame_dig -3 // tuple tail
	swap
	concat
	frame_bury -3 // tuple tail
	frame_dig -4 // tuple head
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub