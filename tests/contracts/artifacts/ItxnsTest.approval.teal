#pragma version 9

txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

abi_route_payment:
	// no dupn needed
	callsub payment
	int 1
	return

payment:
	proto 0 0

	// tests/contracts/itxns.algo.ts:6
	// sendPayment(
	itxn_begin
	int pay
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:8
	// amount: 100
	int 100
	itxn_field Amount

	// tests/contracts/itxns.algo.ts:9
	// receiver: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field Receiver

	// tests/contracts/itxns.algo.ts:10
	// closeRemainderTo: globals.zeroAddress
	global ZeroAddress
	itxn_field CloseRemainderTo

	// tests/contracts/itxns.algo.ts:11
	// fee: 0
	int 0
	itxn_field Fee

	// tests/contracts/itxns.algo.ts:12
	// sender: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field Sender

	// tests/contracts/itxns.algo.ts:13
	// rekeyTo: globals.zeroAddress
	global ZeroAddress
	itxn_field RekeyTo

	// tests/contracts/itxns.algo.ts:14
	// note: 'Hello World!'
	byte "Hello World!"
	itxn_field Note
	itxn_submit
	retsub

abi_route_assetCreation:
	// no dupn needed
	callsub assetCreation
	int 1
	return

assetCreation:
	proto 0 0

	// tests/contracts/itxns.algo.ts:20
	// return sendAssetCreation({
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:21
	// fee: 0
	int 0
	itxn_field Fee

	// tests/contracts/itxns.algo.ts:22
	// configAssetName: 'name'
	byte "name"
	itxn_field ConfigAssetName

	// tests/contracts/itxns.algo.ts:23
	// configAssetUnitName: 'unit'
	byte "unit"
	itxn_field ConfigAssetUnitName

	// tests/contracts/itxns.algo.ts:24
	// configAssetTotal: 1
	int 1
	itxn_field ConfigAssetTotal

	// tests/contracts/itxns.algo.ts:25
	// configAssetDecimals: 0
	int 0
	itxn_field ConfigAssetDecimals

	// tests/contracts/itxns.algo.ts:26
	// configAssetManager: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field ConfigAssetManager

	// tests/contracts/itxns.algo.ts:27
	// configAssetReserve: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field ConfigAssetReserve

	// tests/contracts/itxns.algo.ts:28
	// configAssetFreeze: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field ConfigAssetFreeze

	// tests/contracts/itxns.algo.ts:29
	// configAssetClawback: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field ConfigAssetClawback

	// tests/contracts/itxns.algo.ts:30
	// configAssetDefaultFrozen: 0
	int 0
	itxn_field ConfigAssetDefaultFrozen

	// tests/contracts/itxns.algo.ts:31
	// configAssetURL: 'url'
	byte "url"
	itxn_field ConfigAssetURL

	// tests/contracts/itxns.algo.ts:32
	// configAssetMetadataHash: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
	byte "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
	itxn_field ConfigAssetMetadataHash
	itxn_submit
	itxn CreatedAssetID
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_appCall:
	// no dupn needed
	callsub appCall
	int 1
	return

appCall:
	proto 0 0

	// tests/contracts/itxns.algo.ts:37
	// sendAppCall({
	itxn_begin
	int appl
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:38
	// accounts: [this.app.address]
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field Accounts

	// tests/contracts/itxns.algo.ts:39
	// applicationArgs: ['arg1', 'arg2']
	byte "arg1"
	itxn_field ApplicationArgs
	byte "arg2"
	itxn_field ApplicationArgs

	// tests/contracts/itxns.algo.ts:40
	// applicationID: this.app
	txna Applications 0
	itxn_field ApplicationID

	// tests/contracts/itxns.algo.ts:41
	// applications: [this.app]
	txna Applications 0
	itxn_field Applications

	// tests/contracts/itxns.algo.ts:42
	// approvalProgram: 'approval'
	byte "approval"
	itxn_field ApprovalProgram

	// tests/contracts/itxns.algo.ts:43
	// assets: [Asset.zeroIndex]
	int 0
	itxn_field Assets

	// tests/contracts/itxns.algo.ts:44
	// clearStateProgram: 'clear'
	byte "clear"
	itxn_field ClearStateProgram

	// tests/contracts/itxns.algo.ts:45
	// fee: 0
	int 0
	itxn_field Fee

	// tests/contracts/itxns.algo.ts:46
	// globalNumByteSlice: 1
	int 1
	itxn_field GlobalNumByteSlice

	// tests/contracts/itxns.algo.ts:47
	// globalNumUint: 1
	int 1
	itxn_field GlobalNumUint

	// tests/contracts/itxns.algo.ts:48
	// localNumByteSlice: 1
	int 1
	itxn_field LocalNumByteSlice

	// tests/contracts/itxns.algo.ts:49
	// localNumUint: 1
	int 1
	itxn_field LocalNumUint

	// tests/contracts/itxns.algo.ts:50
	// note: 'note'
	byte "note"
	itxn_field Note

	// tests/contracts/itxns.algo.ts:51
	// onCompletion: 'NoOp'
	int NoOp
	itxn_field OnCompletion
	itxn_submit
	retsub

abi_route_assetConfig:
	// no dupn needed
	callsub assetConfig
	int 1
	return

assetConfig:
	proto 0 0

	// tests/contracts/itxns.algo.ts:56
	// sendAssetConfig({
	itxn_begin
	int acfg
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:57
	// configAsset: Asset.zeroIndex
	int 0
	itxn_field ConfigAsset

	// tests/contracts/itxns.algo.ts:58
	// configAssetManager: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field ConfigAssetManager

	// tests/contracts/itxns.algo.ts:59
	// configAssetReserve: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field ConfigAssetReserve

	// tests/contracts/itxns.algo.ts:60
	// configAssetFreeze: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field ConfigAssetFreeze

	// tests/contracts/itxns.algo.ts:61
	// configAssetClawback: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field ConfigAssetClawback

	// tests/contracts/itxns.algo.ts:62
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	retsub

abi_route_assetFreeze:
	// no dupn needed
	callsub assetFreeze
	int 1
	return

assetFreeze:
	proto 0 0

	// tests/contracts/itxns.algo.ts:67
	// sendAssetFreeze({
	itxn_begin
	int afrz
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:68
	// freezeAssetFrozen: 1
	int 1
	itxn_field FreezeAssetFrozen

	// tests/contracts/itxns.algo.ts:69
	// freezeAssetAccount: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field FreezeAssetAccount

	// tests/contracts/itxns.algo.ts:70
	// freezeAsset: Asset.zeroIndex
	int 0
	itxn_field FreezeAsset

	// tests/contracts/itxns.algo.ts:71
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	retsub

abi_route_assetTransfer:
	// no dupn needed
	callsub assetTransfer
	int 1
	return

assetTransfer:
	proto 0 0

	// tests/contracts/itxns.algo.ts:76
	// sendAssetTransfer({
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:77
	// assetAmount: 1
	int 1
	itxn_field AssetAmount

	// tests/contracts/itxns.algo.ts:78
	// assetCloseTo: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field AssetCloseTo

	// tests/contracts/itxns.algo.ts:79
	// assetReceiver: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field AssetReceiver

	// tests/contracts/itxns.algo.ts:80
	// assetSender: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field AssetSender

	// tests/contracts/itxns.algo.ts:81
	// xferAsset: Asset.zeroIndex
	int 0
	itxn_field XferAsset

	// tests/contracts/itxns.algo.ts:82
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	retsub

abi_route_methodCall:
	// no dupn needed
	callsub methodCall
	int 1
	return

methodCall:
	proto 0 0

	// tests/contracts/itxns.algo.ts:87
	// return sendMethodCall<[Application, Asset], Asset>({
	itxn_begin
	int appl
	itxn_field TypeEnum
	method "method(application,asset)uint64"
	itxn_field ApplicationArgs

	// tests/contracts/itxns.algo.ts:89
	// methodArgs: [this.app, Asset.zeroIndex]
	txna Applications 0
	itxn_field Applications
	int 1
	itob
	itxn_field ApplicationArgs
	int 0
	itxn_field Assets
	int 0
	itob
	itxn_field ApplicationArgs

	// tests/contracts/itxns.algo.ts:90
	// onCompletion: 'NoOp'
	int NoOp
	itxn_field OnCompletion

	// tests/contracts/itxns.algo.ts:91
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	itxn NumLogs
	int 1
	-
	itxnas Logs
	extract 4 0
	btoi
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_onlineKeyRegistration:
	// no dupn needed
	callsub onlineKeyRegistration
	int 1
	return

onlineKeyRegistration:
	proto 0 0

	// tests/contracts/itxns.algo.ts:96
	// sendOnlineKeyRegistration({
	itxn_begin
	int keyreg
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:97
	// selectionPK: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
	byte "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
	itxn_field SelectionPK

	// tests/contracts/itxns.algo.ts:98
	// stateProofPK: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
	byte "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
	itxn_field StateProofPK

	// tests/contracts/itxns.algo.ts:99
	// voteFirst: 1
	int 1
	itxn_field VoteFirst

	// tests/contracts/itxns.algo.ts:100
	// voteKeyDilution: 1
	int 1
	itxn_field VoteKeyDilution

	// tests/contracts/itxns.algo.ts:101
	// voteLast: 1
	int 1
	itxn_field VoteLast

	// tests/contracts/itxns.algo.ts:102
	// votePK: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
	byte "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
	itxn_field VotePK

	// tests/contracts/itxns.algo.ts:103
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	retsub

abi_route_offlineKeyRegistration:
	// no dupn needed
	callsub offlineKeyRegistration
	int 1
	return

offlineKeyRegistration:
	proto 0 0

	// tests/contracts/itxns.algo.ts:108
	// sendOfflineKeyRegistration({
	itxn_begin
	int keyreg
	itxn_field TypeEnum

	// tests/contracts/itxns.algo.ts:109
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	retsub

abi_route_defaultTEALScriptCreate:
	int 1
	return

create_NoOp:
	txn NumAppArgs
	switch abi_route_defaultTEALScriptCreate
	err

call_NoOp:
	method "payment()void"
	method "assetCreation()uint64"
	method "appCall()void"
	method "assetConfig()void"
	method "assetFreeze()void"
	method "assetTransfer()void"
	method "methodCall()uint64"
	method "onlineKeyRegistration()void"
	method "offlineKeyRegistration()void"
	txna ApplicationArgs 0
	match abi_route_payment abi_route_assetCreation abi_route_appCall abi_route_assetConfig abi_route_assetFreeze abi_route_assetTransfer abi_route_methodCall abi_route_onlineKeyRegistration abi_route_offlineKeyRegistration
	err