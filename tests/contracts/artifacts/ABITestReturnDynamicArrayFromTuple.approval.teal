#pragma version 9

txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

abi_route_returnDynamicArrayFromTuple:
	byte 0x
	callsub returnDynamicArrayFromTuple
	int 1
	return

returnDynamicArrayFromTuple:
	proto 1 0

	// tests/contracts/abi.algo.ts:371
	// a: [uint<8>, uint<16>, uint<8>[], uint<16>[], uint<8>[]] = [1, 2, [3, 4], [5, 6], [7, 8]]
	byte 0x // initial head
	byte 0x // initial tail
	byte 0x0009 // initial head offset
	byte 0x01
	callsub process_static_tuple_element
	byte 0x0002
	callsub process_static_tuple_element
	byte 0x03
	byte 0x04
	concat
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	byte 0x0005
	byte 0x0006
	concat
	dup
	len
	int 2
	/
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	byte 0x07
	byte 0x08
	concat
	dup
	len
	itob
	extract 6 2
	swap
	concat
	callsub process_dynamic_tuple_element
	pop // pop head offset
	concat // concat head and tail
	frame_bury -1 // a: [uint8,uint16,uint8[],uint16[],uint8[]]

	// tests/contracts/abi.algo.ts:373
	// return a[4];
	frame_dig -1 // a: [uint8,uint16,uint8[],uint16[],uint8[]]
	store 0 // full array
	int 0 // initial offset
	int 7 // headOffset
	+
	load 0 // full array
	load 0 // full array
	uncover 2
	extract_uint16
	dup // duplicate start of element
	load 0 // full array
	swap
	extract_uint16 // get number of elements
	int 1 // get type length
	* // multiply by type length
	int 2
	+ // add two for length
	extract3
	extract 2 0
	dup
	len
	itob
	extract 6 2
	swap
	concat
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_defaultTEALScriptCreate:
	int 1
	return

create_NoOp:
	txn NumAppArgs
	switch abi_route_defaultTEALScriptCreate
	err

call_NoOp:
	method "returnDynamicArrayFromTuple()uint8[]"
	txna ApplicationArgs 0
	match abi_route_returnDynamicArrayFromTuple
	err

process_static_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -1 // element
	concat
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub

process_dynamic_tuple_element:
	proto 4 3
	frame_dig -4 // tuple head
	frame_dig -2 // head offset
	concat
	frame_bury -4 // tuple head
	frame_dig -1 // element
	dup
	len
	frame_dig -2 // head offset
	btoi
	+
	itob
	extract 6 2
	frame_bury -2 // head offset
	frame_dig -3 // tuple tail
	swap
	concat
	frame_bury -3 // tuple tail
	frame_dig -4 // tuple head
	frame_dig -3 // tuple tail
	frame_dig -2 // head offset
	retsub